Команды виртуальной машины:

mov  (регистр) (регистр/число) -- кладет значение второго аргумента в регистр
add  (регистр) (регистр/число) -- прибавляет к значению в регистре значение второго аргумента.
sub  (регистр) (регистр/число) -- отнимает от значения в регистре значение второго аргумента.
eq   (регистр) (регистр/число) -- сравнивает значение в регистре со значением второго аргумента, результат в res.
pop  (регистр) -- помещает значение с вершины стека в регистр.
push (регистр/число) -- добавляет значение на вершину стека.
push_ra -- добавляет на вершину стека адрес возврата, используется исключительно перед вызовом call.
call (имя) -- вызывает ранее объявленную функцию с соответствующим именем.
def  (имя) -- объявляет функцию с заданным именем; определение функции идет сразу за объявлением.
return -- завершение функции, реализует переход к адресу возврата (Предварительно адрес нужно положить в регистр res).
begin -- начало выполнения программы.
end   -- завершение выполнения программы.
jlabel (имя) -- объявление метки для команды jlnz.
jlnz   (регистр/число) (имя) -- если значение первого аргумента не ноль, делаем прыжок на ранее объявленный jlabel.
print  (регистр/число) -- печатает переданное значение.
read   (регистр) -- читает значение в переданный регистр.
prints (строка/#имя) -- печатает переданную строку (или прописанную явно, или статически размещенную).
data   (имя) (строка) -- объявление статически размещенной строки с соответствующим именем.
